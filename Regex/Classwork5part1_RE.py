# str1="I am going home to do a homework."
# words=str1.split(sep=' ')
# for word in words:
#     if len(word)==2:
#         print(word, end=' ')
# print()
import re as regular_expressions_library

file=open("R:/Study/(1)_Python course/example_regex.txt", 'r')
text=file.read()
file.close()
# print(text)
think_pattern=regular_expressions_library.compile(pattern="think")
# print(type(think_pattern))
# print(think_pattern)
# print(think_pattern.match(string=text, pos=2))
# print(think_pattern.search(string=text, pos=0, endpos=2850))
# print(think_pattern.findall(text, 0, 2850))
# iterator=think_pattern.finditer(text, 0, 2850)
# print(iterator)
# for match in iterator:
#     print(match)
# question_mark_pattern=regular_expressions_library.compile(pattern="\?")
# print(question_mark_pattern.findall(text, 0, 2850))
# \, ^, $, ., |, ?, *, +, {, }, (, ), [, ], ", '
# path1=r"C:\Windows\System32"
# print(path1)
# path2=r"C:\\Windows\\System32"
# print(path2)
# backslash_pattern=regular_expressions_library.compile(pattern=r"\'")
# print(backslash_pattern.findall(text))
# a_pattern=regular_expressions_library.compile("a[lts]",flags=regular_expressions_library.I)
# print(a_pattern.findall(text, 0, 2850))
# no0_pattern=regular_expressions_library.compile("[1-9][0-9][0-9][0-9]")
# print(no0_pattern.findall(text, 0))
# no_vowels=regular_expressions_library.compile("[^aeiou]", flags=regular_expressions_library.I)
# print(no_vowels.findall(text, 0, 2850))
# possible_pattern=regular_expressions_library.compile("and|or|the", regular_expressions_library.I)
# print(possible_pattern.findall(text, 0))
# . (no \n), \d (any digit), \D (no digit), \s (whitespace), \S (no whitespace),
# \w (alpha-numeric), \W (no alpha-numeric)
# ? (0/1 times), * (0 or more times), + (1 and more times), {n} (n times)
# {n, } (at least n times), {, n} (at most n times)
# no_new_line=regular_expressions_library.compile(".")
# print(no_new_line.findall(text))
# bo_pattern=regular_expressions_library.compile("\w*bo\w*", regular_expressions_library.IGNORECASE)
# print(bo_pattern.findall(text, 0, 2850))
# e_mail_pattern=regular_expressions_library.compile("\w+@\w+\.{1}\w+\.?\w*")
# ID_pattern=regular_expressions_library.compile("\d{, 9}")
# writer_pattern=regular_expressions_library.compile("WRITE[rs]?", regular_expressions_library.I)
# print(writer_pattern.findall(text))
# a_o_pattern=regular_expressions_library.compile("[a-o]+", regular_expressions_library.I)
# print(a_o_pattern.findall(text))
# a_o_pattern2=regular_expressions_library.compile("[a-o]+?", regular_expressions_library.I)
# print(a_o_pattern2.findall(text))
# and_pattern=regular_expressions_library.compile("\\b(and|or|the)\\b")
# print(and_pattern.findall(text))
# bo_pattern2=regular_expressions_library.compile("\\bbo\w*")
# print(bo_pattern2.findall(text))
# sub_pattern=regular_expressions_library.compile("\d")
# print(sub_pattern.sub(repl="X", string=text))
# sub_pattern=regular_expressions_library.compile("\d")
# print(sub_pattern.subn(repl="X", string=text))